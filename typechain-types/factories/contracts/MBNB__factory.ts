/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MBNB, MBNBInterface } from "../../contracts/MBNB";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_join",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d9738038062000d97833981016040819052620000349162000169565b604080518082018252600b81526a26b2b931bab93c9021272160a91b60208083019182528351808501909452600484526336a1272160e11b9084015281519192916200008391600391620000c3565b50805162000099906004906020840190620000c3565b5050600580546001600160a01b0319166001600160a01b03939093169290921790915550620001d7565b828054620000d1906200019b565b90600052602060002090601f016020900481019282620000f5576000855562000140565b82601f106200011057805160ff191683800117855562000140565b8280016001018555821562000140579182015b828111156200014057825182559160200191906001019062000123565b506200014e92915062000152565b5090565b5b808211156200014e576000815560010162000153565b6000602082840312156200017c57600080fd5b81516001600160a01b03811681146200019457600080fd5b9392505050565b600181811c90821680620001b057607f821691505b602082108103620001d157634e487b7160e01b600052602260045260246000fd5b50919050565b610bb080620001e76000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c806340c10f191161007c57806340c10f191461014c57806342966c681461015f57806370a082311461017257806395d89b411461019b578063a457c2d7146101a3578063a9059cbb146101b6578063dd62ed3e146101c957600080fd5b806306fdde03146100c4578063095ea7b3146100e257806318160ddd1461010557806323b872dd14610117578063313ce5671461012a5780633950935114610139575b600080fd5b6100cc6101dc565b6040516100d99190610973565b60405180910390f35b6100f56100f03660046109e4565b61026e565b60405190151581526020016100d9565b6002545b6040519081526020016100d9565b6100f5610125366004610a0e565b610286565b604051601281526020016100d9565b6100f56101473660046109e4565b6102aa565b6100f561015a3660046109e4565b6102cc565b6100f561016d366004610a4a565b610315565b610109610180366004610a63565b6001600160a01b031660009081526020819052604090205490565b6100cc610354565b6100f56101b13660046109e4565b610363565b6100f56101c43660046109e4565b6103de565b6101096101d7366004610a85565b6103ec565b6060600380546101eb90610ab8565b80601f016020809104026020016040519081016040528092919081815260200182805461021790610ab8565b80156102645780601f1061023957610100808354040283529160200191610264565b820191906000526020600020905b81548152906001019060200180831161024757829003601f168201915b5050505050905090565b60003361027c818585610417565b5060019392505050565b60003361029485828561053c565b61029f8585856105b6565b506001949350505050565b60003361027c8185856102bd83836103ec565b6102c79190610b08565b610417565b6005546000906001600160a01b031633146103025760405162461bcd60e51b81526004016102f990610b20565b60405180910390fd5b61030c8383610772565b50600192915050565b6005546000906001600160a01b031633146103425760405162461bcd60e51b81526004016102f990610b20565b61034c338361083f565b506001919050565b6060600480546101eb90610ab8565b6000338161037182866103ec565b9050838110156103d15760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016102f9565b61029f8286868403610417565b60003361027c8185856105b6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104795760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016102f9565b6001600160a01b0382166104da5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016102f9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061054884846103ec565b905060001981146105b057818110156105a35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016102f9565b6105b08484848403610417565b50505050565b6001600160a01b03831661061a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016102f9565b6001600160a01b03821661067c5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016102f9565b6001600160a01b038316600090815260208190526040902054818110156106f45760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016102f9565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061072b908490610b08565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610b5b8339815191528460405161076591815260200190565b60405180910390a36105b0565b6001600160a01b0382166107c85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016102f9565b80600260008282546107da9190610b08565b90915550506001600160a01b03821660009081526020819052604081208054839290610807908490610b08565b90915550506040518181526001600160a01b03831690600090600080516020610b5b8339815191529060200160405180910390a35050565b6001600160a01b03821661089f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016102f9565b6001600160a01b038216600090815260208190526040902054818110156109135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016102f9565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610942908490610b43565b90915550506040518281526000906001600160a01b03851690600080516020610b5b8339815191529060200161052f565b600060208083528351808285015260005b818110156109a057858101830151858201604001528201610984565b818111156109b2576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146109df57600080fd5b919050565b600080604083850312156109f757600080fd5b610a00836109c8565b946020939093013593505050565b600080600060608486031215610a2357600080fd5b610a2c846109c8565b9250610a3a602085016109c8565b9150604084013590509250925092565b600060208284031215610a5c57600080fd5b5035919050565b600060208284031215610a7557600080fd5b610a7e826109c8565b9392505050565b60008060408385031215610a9857600080fd5b610aa1836109c8565b9150610aaf602084016109c8565b90509250929050565b600181811c90821680610acc57607f821691505b602082108103610aec57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b1b57610b1b610af2565b500190565b6020808252600990820152682337b93134b23232b760b91b604082015260600190565b600082821015610b5557610b55610af2565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220e1bf5a035edab0ad4514a6d5daaa2c8cba99629bf3519c62f06e02f69bfe9e9b64736f6c634300080d0033";

type MBNBConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MBNBConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MBNB__factory extends ContractFactory {
  constructor(...args: MBNBConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _join: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MBNB> {
    return super.deploy(_join, overrides || {}) as Promise<MBNB>;
  }
  override getDeployTransaction(
    _join: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_join, overrides || {});
  }
  override attach(address: string): MBNB {
    return super.attach(address) as MBNB;
  }
  override connect(signer: Signer): MBNB__factory {
    return super.connect(signer) as MBNB__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MBNBInterface {
    return new utils.Interface(_abi) as MBNBInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MBNB {
    return new Contract(address, _abi, signerOrProvider) as MBNB;
  }
}
