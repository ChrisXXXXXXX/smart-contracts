/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ABNBc, ABNBcInterface } from "../../contracts/ABNBc";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "desc",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mintMe",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000eba38038062000eba8339810160408190526200003491620001f4565b8151829082906200004d90600390602085019062000081565b5080516200006390600490602084019062000081565b5050600580546001600160a01b03191633179055506200029a915050565b8280546200008f906200025e565b90600052602060002090601f016020900481019282620000b35760008555620000fe565b82601f10620000ce57805160ff1916838001178555620000fe565b82800160010185558215620000fe579182015b82811115620000fe578251825591602001919060010190620000e1565b506200010c92915062000110565b5090565b5b808211156200010c576000815560010162000111565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014f57600080fd5b81516001600160401b03808211156200016c576200016c62000127565b604051601f8301601f19908116603f0116810190828211818310171562000197576200019762000127565b81604052838152602092508683858801011115620001b457600080fd5b600091505b83821015620001d85785820183015181830184015290820190620001b9565b83821115620001ea5760008385830101525b9695505050505050565b600080604083850312156200020857600080fd5b82516001600160401b03808211156200022057600080fd5b6200022e868387016200013d565b935060208501519150808211156200024557600080fd5b5062000254858286016200013d565b9150509250929050565b600181811c908216806200027357607f821691505b6020821081036200029457634e487b7160e01b600052602260045260246000fd5b50919050565b610c1080620002aa6000396000f3fe608060405234801561001057600080fd5b50600436106100d55760003560e01c806342966c681161008757806342966c681461017557806370a08231146101885780638da5cb5b146101b157806395d89b41146101dc578063a457c2d7146101e4578063a9059cbb146101f7578063c471ce801461020a578063dd62ed3e1461021d57600080fd5b806306fdde03146100da578063095ea7b3146100f857806318160ddd1461011b57806323b872dd1461012d578063313ce56714610140578063395093511461014f57806340c10f1914610162575b600080fd5b6100e2610230565b6040516100ef91906109d3565b60405180910390f35b61010b610106366004610a44565b6102c2565b60405190151581526020016100ef565b6002545b6040519081526020016100ef565b61010b61013b366004610a6e565b6102da565b604051601281526020016100ef565b61010b61015d366004610a44565b6102fe565b61010b610170366004610a44565b610320565b61010b610183366004610aaa565b610369565b61011f610196366004610ac3565b6001600160a01b031660009081526020819052604090205490565b6005546101c4906001600160a01b031681565b6040516001600160a01b0390911681526020016100ef565b6100e26103a8565b61010b6101f2366004610a44565b6103b7565b61010b610205366004610a44565b610432565b61010b610218366004610aaa565b610440565b61011f61022b366004610ae5565b61044c565b60606003805461023f90610b18565b80601f016020809104026020016040519081016040528092919081815260200182805461026b90610b18565b80156102b85780601f1061028d576101008083540402835291602001916102b8565b820191906000526020600020905b81548152906001019060200180831161029b57829003601f168201915b5050505050905090565b6000336102d0818585610477565b5060019392505050565b6000336102e885828561059c565b6102f3858585610616565b506001949350505050565b6000336102d0818585610311838361044c565b61031b9190610b68565b610477565b6005546000906001600160a01b031633146103565760405162461bcd60e51b815260040161034d90610b80565b60405180910390fd5b61036083836107d2565b50600192915050565b6005546000906001600160a01b031633146103965760405162461bcd60e51b815260040161034d90610b80565b6103a0338361089f565b506001919050565b60606004805461023f90610b18565b600033816103c5828661044c565b9050838110156104255760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161034d565b6102f38286868403610477565b6000336102d0818585610616565b60006103a033836107d2565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166104d95760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161034d565b6001600160a01b03821661053a5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161034d565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105a8848461044c565b9050600019811461061057818110156106035760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161034d565b6106108484848403610477565b50505050565b6001600160a01b03831661067a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161034d565b6001600160a01b0382166106dc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161034d565b6001600160a01b038316600090815260208190526040902054818110156107545760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161034d565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061078b908490610b68565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610bbb833981519152846040516107c591815260200190565b60405180910390a3610610565b6001600160a01b0382166108285760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161034d565b806002600082825461083a9190610b68565b90915550506001600160a01b03821660009081526020819052604081208054839290610867908490610b68565b90915550506040518181526001600160a01b03831690600090600080516020610bbb8339815191529060200160405180910390a35050565b6001600160a01b0382166108ff5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161034d565b6001600160a01b038216600090815260208190526040902054818110156109735760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161034d565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109a2908490610ba3565b90915550506040518281526000906001600160a01b03851690600080516020610bbb8339815191529060200161058f565b600060208083528351808285015260005b81811015610a00578581018301518582016040015282016109e4565b81811115610a12576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610a3f57600080fd5b919050565b60008060408385031215610a5757600080fd5b610a6083610a28565b946020939093013593505050565b600080600060608486031215610a8357600080fd5b610a8c84610a28565b9250610a9a60208501610a28565b9150604084013590509250925092565b600060208284031215610abc57600080fd5b5035919050565b600060208284031215610ad557600080fd5b610ade82610a28565b9392505050565b60008060408385031215610af857600080fd5b610b0183610a28565b9150610b0f60208401610a28565b90509250929050565b600181811c90821680610b2c57607f821691505b602082108103610b4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610b7b57610b7b610b52565b500190565b6020808252600990820152682337b93134b23232b760b91b604082015260600190565b600082821015610bb557610bb5610b52565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220a9ef7e9dc0803371f268d5824c30ce6482b84ecbd06c7acf96b9628abc990db664736f6c634300080d0033";

type ABNBcConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ABNBcConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ABNBc__factory extends ContractFactory {
  constructor(...args: ABNBcConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    desc: string,
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ABNBc> {
    return super.deploy(desc, name, overrides || {}) as Promise<ABNBc>;
  }
  override getDeployTransaction(
    desc: string,
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(desc, name, overrides || {});
  }
  override attach(address: string): ABNBc {
    return super.attach(address) as ABNBc;
  }
  override connect(signer: Signer): ABNBc__factory {
    return super.connect(signer) as ABNBc__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ABNBcInterface {
    return new utils.Interface(_abi) as ABNBcInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ABNBc {
    return new Contract(address, _abi, signerOrProvider) as ABNBc;
  }
}
