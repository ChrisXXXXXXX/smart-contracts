/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Jar, JarInterface } from "../../../contracts/jar.sol/Jar";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Cage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Exit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "exitDelay",
        type: "uint256",
      },
    ],
    name: "ExitDelayUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "exitDelay",
        type: "uint256",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Join",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address[]",
        name: "user",
        type: "address[]",
      },
    ],
    name: "Redeem",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "Replenished",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "SpreadUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "USB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "exitDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAPR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardForDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_usbToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_spread",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_exitDelay",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "join",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastTimeRewardApplicable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "live",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "redeemBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "redeemable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "guy",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "replenish",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_exitDelay",
        type: "uint256",
      },
    ],
    name: "setExitDelay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_spread",
        type: "uint256",
      },
    ],
    name: "setSpread",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "spread",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensPerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tpsPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "unstakeTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526003805460ff191660121790553480156200001e57600080fd5b5060405162001867380380620018678339810160408190526200004191620001fe565b33600090815260208181526040909120600190819055601181905583516200006c928501906200008b565b508051620000829060029060208401906200008b565b505050620002a4565b828054620000999062000268565b90600052602060002090601f016020900481019282620000bd576000855562000108565b82601f10620000d857805160ff191683800117855562000108565b8280016001018555821562000108579182015b8281111562000108578251825591602001919060010190620000eb565b50620001169291506200011a565b5090565b5b808211156200011657600081556001016200011b565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200015957600080fd5b81516001600160401b038082111562000176576200017662000131565b604051601f8301601f19908116603f01168101908282118183101715620001a157620001a162000131565b81604052838152602092508683858801011115620001be57600080fd5b600091505b83821015620001e25785820183015181830184015290820190620001c3565b83821115620001f45760008385830101525b9695505050505050565b600080604083850312156200021257600080fd5b82516001600160401b03808211156200022a57600080fd5b620002388683870162000147565b935060208501519150808211156200024f57600080fd5b506200025e8582860162000147565b9150509250929050565b600181811c908216806200027d57607f821691505b6020821081036200029e57634e487b7160e01b600052602260045260246000fd5b50919050565b6115b380620002b46000396000f3fe608060405234801561001057600080fd5b50600436106101c55760003560e01c80636ef61092116100fa57806395d89b411161009d57806395d89b41146103ad5780639c52a7f1146103b5578063b66a261c146103c8578063bc0e610a146103db578063bf353dbb146103ee578063c04637111461040e578063c89d5b8b14610417578063d5092b561461041f578063fff0d6b11461042757600080fd5b80636ef610921461031057806370a08231146103305780637a1ac61e146103505780637c3b0b1c146103635780637f8661a11461037657806380faa57d146103895780638554ba1514610391578063957aa58c146103a457600080fd5b80632ac1aa351161016d5780632ac1aa351461025d5780632c4e722e1461027d578063313ce567146102865780633197cbb6146102a55780633a93635b146102ae578063484267a4146102d95780635c25c76c146102ec57806365fae35e146102f5578063692450091461030857600080fd5b80628cc262146101ca578063033c10ac146101f0578063049878f3146101f957806306fdde031461020e5780630700037d1461022357806318160ddd146102435780631c1f78eb1461024c5780632838863014610254575b600080fd5b6101dd6101d836600461121e565b610447565b6040519081526020015b60405180910390f35b6101dd60095481565b61020c610207366004611239565b6104cd565b005b6102166105d9565b6040516101e7919061127e565b6101dd61023136600461121e565b600e6020526000908152604090205481565b6101dd60045481565b6101dd610667565b6101dd600b5481565b6101dd61026b36600461121e565b60106020526000908152604090205481565b6101dd60085481565b6003546102939060ff1681565b60405160ff90911681526020016101e7565b6101dd60075481565b600c546102c1906001600160a01b031681565b6040516001600160a01b0390911681526020016101e7565b6101dd6102e736600461121e565b61067e565b6101dd60065481565b61020c61030336600461121e565b6106b2565b61020c6106fe565b6101dd61031e36600461121e565b600f6020526000908152604090205481565b6101dd61033e36600461121e565b60056020526000908152604090205481565b61020c61035e3660046112b1565b61075d565b61020c610371366004611239565b6107f3565b61020c610384366004611239565b61085e565b6101dd610995565b61020c61039f366004611239565b6109a3565b6101dd60115481565b610216610ac3565b61020c6103c336600461121e565b610ad0565b61020c6103d6366004611239565b610b19565b61020c6103e93660046112fa565b610c0b565b6101dd6103fc36600461121e565b60006020819052908152604090205481565b6101dd600a5481565b6101dd610e21565b6101dd610e7a565b6101dd61043536600461121e565b600d6020526000908152604090205481565b6001600160a01b0381166000908152600d6020526040812054819061046a610e7a565b61047491906113d5565b6001600160a01b0384166000908152600e602090815260408083205460059092529091205491925090670de0b6b3a7640000906104b29084906113ec565b6104bc919061140b565b6104c6919061142d565b9392505050565b336104d6610e7a565b6009556104e1610995565b600a556001600160a01b03811615610528576104fc81610447565b6001600160a01b0382166000908152600e6020908152604080832093909355600954600d909152919020555b6011546001146105535760405162461bcd60e51b815260040161054a90611445565b60405180910390fd5b336000908152600560205260408120805484929061057290849061142d565b92505081905550816004600082825461058b919061142d565b9091555050600c546105a8906001600160a01b0316333085610ef3565b604051829033907fb4e09949657f21548b58afe74e7b86cd2295da5ff1598ae1e5faecb1cf19ca9590600090a35050565b600180546105e69061146b565b80601f01602080910402602001604051908101604052809291908181526020018280546106129061146b565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505081565b600060065460085461067991906113ec565b905090565b600061068982610447565b6001600160a01b0383166000908152600560205260409020546106ac919061142d565b92915050565b336000908152602081905260409020546001146106e15760405162461bcd60e51b815260040161054a906114a5565b6001600160a01b0316600090815260208190526040902060019055565b3360009081526020819052604090205460011461072d5760405162461bcd60e51b815260040161054a906114a5565b600060118190556040517f2308ed18a14e800c39b86eb6ea43270105955ca385b603b64eca89f98ae8fbda9190a1565b3360009081526020819052604090205460011461078c5760405162461bcd60e51b815260040161054a906114a5565b6006541561079957600080fd5b600c80546001600160a01b0319166001600160a01b0385169081179091556006839055600b829055604051829184917f0f91882b50d9330af0b1d4998e6af7f2eaee90ce7e77ea54fea089af166d021d90600090a4505050565b336000908152602081905260409020546001146108225760405162461bcd60e51b815260040161054a906114a5565b600b8190556040518181527f98158d40aa2348c441befca9ed301c96b8022243b8d3c96e7ac657a2052fa34d906020015b60405180910390a150565b33610867610e7a565b600955610872610995565b600a556001600160a01b038116156108b95761088d81610447565b6001600160a01b0382166000908152600e6020908152604080832093909355600954600d909152919020555b6011546001146108db5760405162461bcd60e51b815260040161054a90611445565b600082116108e857600080fd5b33600090815260056020526040812080548492906109079084906113d5565b92505081905550816004600082825461092091906113d5565b9091555050336000908152600f60205260408120805484929061094490849061142d565b9091555050600b54610956904261142d565b3360008181526010602052604080822093909355915184927f22d324652c93739755cf4581508b60875ebdd78c20c0cff5cf8e23452b29963191a35050565b600061067942600754610f64565b60006109ad610e7a565b6009556109b8610995565b600a556001600160a01b038116156109ff576109d381610447565b6001600160a01b0382166000908152600e6020908152604080832093909355600954600d909152919020555b6007544210610a1d57600654610a15908361140b565b600855610a5f565b600042600754610a2d91906113d5565b9050600060085482610a3f91906113ec565b600654909150610a4f828661142d565b610a59919061140b565b60085550505b42600a819055600654610a719161142d565b600755600c54610a8c906001600160a01b0316333085610ef3565b6040518281527fc38f9a7f7e6a60286c03e404e4a1890a1434a5633900261bf999356064b031da9060200160405180910390a15050565b600280546105e69061146b565b33600090815260208190526040902054600114610aff5760405162461bcd60e51b815260040161054a906114a5565b6001600160a01b0316600090815260208190526040812055565b33600090815260208190526040902054600114610b485760405162461bcd60e51b815260040161054a906114a5565b6007544211610b8e5760405162461bcd60e51b81526020600482015260126024820152714a61722f726577617264732d61637469766560701b604482015260640161054a565b60008111610bd65760405162461bcd60e51b81526020600482015260156024820152744a61722f6475726174696f6e2d6e6f6e2d7a65726f60581b604482015260640161054a565b60068190556040518181527fd92797b660ac7e1e1578eca62542c5e59c27b3c4523723c676bf485405b1601190602001610853565b601154600114610c2d5760405162461bcd60e51b815260040161054a90611445565b60005b8151811015610ddf5760106000838381518110610c4f57610c4f6114d1565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020544210610dcd576000600f6000848481518110610c9657610c966114d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054600e6000858581518110610cd557610cd56114d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054610d08919061142d565b90508015610dcb576000600e6000858581518110610d2857610d286114d1565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055506000600f6000858581518110610d6c57610d6c6114d1565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002081905550610dcb838381518110610dad57610dad6114d1565b6020908102919091010151600c546001600160a01b03169083610f7a565b505b80610dd7816114e7565b915050610c30565b5080604051610dee9190611500565b604051908190038120907fd0d66a181530eab5234479616eb1b8ecdb27a88c91dab20b07d5bcc7b02fa94e90600090a250565b600060065460001480610e345750600454155b15610e3f5750600090565b600454600854610e53906301e133806113ec565b610e6590670de0b6b3a76400006113ec565b610e6f919061140b565b6106799060646113ec565b6004546000901580610e8e5750600a544211155b15610e9a575060095490565b6000610ea4610995565b9050600454600854600a5483610eba91906113d5565b610ec491906113ec565b610ed690670de0b6b3a76400006113ec565b610ee0919061140b565b600954610eed919061142d565b91505090565b6040516001600160a01b0380851660248301528316604482015260648101829052610f5e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610faf565b50505050565b6000818310610f7357816104c6565b5090919050565b6040516001600160a01b038316602482015260448101829052610faa90849063a9059cbb60e01b90606401610f27565b505050565b6000611004826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166110819092919063ffffffff16565b805190915015610faa5780806020019051810190611022919061153f565b610faa5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161054a565b60606110908484600085611098565b949350505050565b6060824710156110f95760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161054a565b6001600160a01b0385163b6111505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161054a565b600080866001600160a01b0316858760405161116c9190611561565b60006040518083038185875af1925050503d80600081146111a9576040519150601f19603f3d011682016040523d82523d6000602084013e6111ae565b606091505b50915091506111be8282866111c9565b979650505050505050565b606083156111d85750816104c6565b8251156111e85782518084602001fd5b8160405162461bcd60e51b815260040161054a919061127e565b80356001600160a01b038116811461121957600080fd5b919050565b60006020828403121561123057600080fd5b6104c682611202565b60006020828403121561124b57600080fd5b5035919050565b60005b8381101561126d578181015183820152602001611255565b83811115610f5e5750506000910152565b602081526000825180602084015261129d816040850160208701611252565b601f01601f19169190910160400192915050565b6000806000606084860312156112c657600080fd5b6112cf84611202565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561130d57600080fd5b823567ffffffffffffffff8082111561132557600080fd5b818501915085601f83011261133957600080fd5b81358181111561134b5761134b6112e4565b8060051b604051601f19603f83011681018181108582111715611370576113706112e4565b60405291825284820192508381018501918883111561138e57600080fd5b938501935b828510156113b3576113a485611202565b84529385019392850192611393565b98975050505050505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156113e7576113e76113bf565b500390565b6000816000190483118215151615611406576114066113bf565b500290565b60008261142857634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611440576114406113bf565b500190565b6020808252600c908201526b4a61722f6e6f742d6c69766560a01b604082015260600190565b600181811c9082168061147f57607f821691505b60208210810361149f57634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526012908201527112985c8bdb9bdd0b585d5d1a1bdc9a5e995960721b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000600182016114f9576114f96113bf565b5060010190565b815160009082906020808601845b838110156115335781516001600160a01b03168552938201939082019060010161150e565b50929695505050505050565b60006020828403121561155157600080fd5b815180151581146104c657600080fd5b60008251611573818460208701611252565b919091019291505056fea2646970667358221220f6fb3d8c5bcbf82bfc595d571ce2110b5f296874b4fdae626996c9a793ef9e7d64736f6c634300080d0033";

type JarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Jar__factory extends ContractFactory {
  constructor(...args: JarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Jar> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<Jar>;
  }
  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): Jar {
    return super.attach(address) as Jar;
  }
  override connect(signer: Signer): Jar__factory {
    return super.connect(signer) as Jar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JarInterface {
    return new utils.Interface(_abi) as JarInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Jar {
    return new Contract(address, _abi, signerOrProvider) as Jar;
  }
}
