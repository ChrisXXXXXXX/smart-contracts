/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BnbOracle,
  BnbOracleInterface,
} from "../../../contracts/oracle/BnbOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bnbUSD",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PriceTokenChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "changePriceToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "peek",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161032238038061032283398101604081905261002f91610062565b60018054336001600160a01b031991821617909155600080549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610281806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630341d1041461003b57806359e02dd714610050575b600080fd5b61004e6100493660046101ac565b610071565b005b61005861010f565b6040805192835290151560208301520160405180910390f35b6001546001600160a01b031633146100bb5760405162461bcd60e51b81526020600482015260096024820152682337b93134b23232b760b91b604482015260640160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f9b44827111b30d796166e9f9515e9d6ee25234c008ed7157ec1128263e8887289060200160405180910390a150565b60008060008060009054906101000a90046001600160a01b03166001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a91906101fb565b505050915050600081136101a357506000928392509050565b92600192509050565b6000602082840312156101be57600080fd5b81356001600160a01b03811681146101d557600080fd5b9392505050565b805169ffffffffffffffffffff811681146101f657600080fd5b919050565b600080600080600060a0868803121561021357600080fd5b61021c866101dc565b945060208601519350604086015192506060860151915061023f608087016101dc565b9050929550929590935056fea264697066735822122023a2586331af3abab95ec5c84e310cf4e10bf3b8603528aff0927e2d291a965c64736f6c634300080d0033";

type BnbOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BnbOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BnbOracle__factory extends ContractFactory {
  constructor(...args: BnbOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnbUSD: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BnbOracle> {
    return super.deploy(bnbUSD, overrides || {}) as Promise<BnbOracle>;
  }
  override getDeployTransaction(
    bnbUSD: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bnbUSD, overrides || {});
  }
  override attach(address: string): BnbOracle {
    return super.attach(address) as BnbOracle;
  }
  override connect(signer: Signer): BnbOracle__factory {
    return super.connect(signer) as BnbOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BnbOracleInterface {
    return new utils.Interface(_abi) as BnbOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BnbOracle {
    return new Contract(address, _abi, signerOrProvider) as BnbOracle;
  }
}
