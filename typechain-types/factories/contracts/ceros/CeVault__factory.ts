/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CeVault,
  CeVaultInterface,
} from "../../../contracts/ceros/CeVault";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentRatio",
        type: "uint256",
      },
    ],
    name: "RatioUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "RouterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
    ],
    name: "changeRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimYields",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimYieldsFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "depositFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getCeTokenBalanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getClaimedOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getDepositOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getPrincipalOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalAmountInVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getYieldFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "ceTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "aBNBcAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611b8c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101115760003560e01c80635d602c00116100ad578063b36684ac11610071578063b36684ac14610261578063c96f0e0114610274578063f2fde38b1461029d578063f3fef3a3146102b0578063fad83484146102c357600080fd5b80635d602c00146101f1578063715018a61461021a5780638da5cb5b146102225780639f1d92671461023b578063aba317a91461024e57600080fd5b80631101596c1461011657806317d7de7c1461013c578063223888c1146101515780632f4f21e214610164578063340ac20f146101775780634226626a1461018c578063463fd1af146101b557806347e7ef24146101c85780635c975abb146101db575b600080fd5b61012961012436600461167a565b6102cb565b6040519081526020015b60405180910390f35b61014461033e565b60405161013391906116ad565b61012961015f366004611702565b6103d0565b61012961017236600461171d565b6104b8565b61018a610185366004611702565b6106f7565b005b61012961019a366004611702565b6001600160a01b0316600090815260cd602052604090205490565b61018a6101c336600461175d565b610777565b6101296101d636600461171d565b610843565b60655460ff166040519015158152602001610133565b6101296101ff366004611702565b6001600160a01b0316600090815260ce602052604090205490565b61018a6109ba565b6033546001600160a01b0316604051610133919061182f565b610129610249366004611843565b6109f0565b61012961025c366004611702565b610d22565b61012961026f366004611702565b610dde565b610129610282366004611702565b6001600160a01b0316600090815260cf602052604090205490565b61018a6102ab366004611702565b610e1c565b6101296102be36600461171d565b610eb7565b6101296111a4565b60cc546000906001600160a01b031633146103015760405162461bcd60e51b81526004016102f89061187f565b60405180910390fd5b6002609754036103235760405162461bcd60e51b81526004016102f8906118b4565b6002609755610332838361121b565b60016097559392505050565b606060c9805461034d906118eb565b80601f0160208091040260200160405190810160405280929190818152602001828054610379906118eb565b80156103c65780601f1061039b576101008083540402835291602001916103c6565b820191906000526020600020905b8154815290600101906020018083116103a957829003601f168201915b5050505050905090565b60405163aba317a960e01b81526000908190309063aba317a9906103f890869060040161182f565b602060405180830381865afa158015610415573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104399190611925565b6001600160a01b038416600090815260ce602052604081205491925090610461908390611954565b6001600160a01b038516600090815260cd6020526040902054909150811161048d575060009392505050565b6001600160a01b038416600090815260cd60205260409020546104b09082611954565b949350505050565b60006002609754036104dc5760405162461bcd60e51b81526004016102f8906118b4565b600260975560cb54604080516371ca337d60e01b815290516000926001600160a01b0316916371ca337d9160048083019260209291908290030181865afa15801561052b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054f9190611925565b60cb546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd906105849033903090889060040161196b565b6020604051808303816000875af11580156105a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c7919061198f565b506000816105dd85670de0b6b3a76400006119b1565b6105e791906119d0565b6001600160a01b038616600090815260ce60205260408120805492935086929091906106149084906119f2565b90915550506001600160a01b038516600090815260cf6020526040812080548392906106419084906119f2565b909155505060ca546040516340c10f1960e01b81526001600160a01b03909116906340c10f19906106789088908590600401611a0a565b600060405180830381600087803b15801561069257600080fd5b505af11580156106a6573d6000803e3d6000fd5b50506040518381526001600160a01b03881692503391507f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060200160405180910390a36001609755949350505050565b6033546001600160a01b031633146107215760405162461bcd60e51b81526004016102f890611a23565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f1085cec9a5108943412475d298086ae4d0abf09cfad47b05436b89fe887a820c9061076c90839061182f565b60405180910390a150565b600061078360016113cd565b9050801561079b576000805461ff0019166101001790555b6107a361145a565b6107ab611489565b6107b36114b8565b83516107c69060c99060208701906115ca565b5060ca80546001600160a01b038086166001600160a01b03199283161790925560cb805492851692909116919091179055801561083d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b60006002609754036108675760405162461bcd60e51b81526004016102f8906118b4565b600260975560cb54604080516371ca337d60e01b815290516000926001600160a01b0316916371ca337d9160048083019260209291908290030181865afa1580156108b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108da9190611925565b60cb546040516323b872dd60e01b81529192506001600160a01b0316906323b872dd9061090f9033903090889060040161196b565b6020604051808303816000875af115801561092e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610952919061198f565b5060008161096885670de0b6b3a76400006119b1565b61097291906119d0565b33600090815260ce60205260408120805492935086929091906109969084906119f2565b909155505033600090815260cf6020526040812080548392906106419084906119f2565b6033546001600160a01b031633146109e45760405162461bcd60e51b81526004016102f890611a23565b6109ee60006114e7565b565b6000600260975403610a145760405162461bcd60e51b81526004016102f8906118b4565b600260975560cc546001600160a01b03163314610a435760405162461bcd60e51b81526004016102f89061187f565b60cb54604080516371ca337d60e01b815290516000926001600160a01b0316916371ca337d9160048083019260209291908290030181865afa158015610a8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab19190611925565b90506000670de0b6b3a7640000610ac883866119b1565b610ad291906119d0565b60cb546040516370a0823160e01b815291925082916001600160a01b03909116906370a0823190610b0790309060040161182f565b602060405180830381865afa158015610b24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b489190611925565b1015610b665760405162461bcd60e51b81526004016102f890611a58565b6001600160a01b038616600090815260cf602052604090205484811015610b9f5760405162461bcd60e51b81526004016102f890611a8f565b6001600160a01b038716600090815260cf602052604081208054879290610bc7908490611954565b909155505060ca54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610bfe908a908990600401611a0a565b600060405180830381600087803b158015610c1857600080fd5b505af1158015610c2c573d6000803e3d6000fd5b505050506001600160a01b038716600090815260ce602052604081208054849290610c58908490611954565b909155505060cb5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb90610c8f9089908690600401611a0a565b6020604051808303816000875af1158015610cae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd2919061198f565b506040518281526001600160a01b0387169033907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9060200160405180910390a350600160975595945050505050565b60008060cb60009054906101000a90046001600160a01b03166001600160a01b03166371ca337d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9c9190611925565b6001600160a01b038416600090815260cf6020526040902054909150670de0b6b3a764000090610dcd9083906119b1565b610dd791906119d0565b9392505050565b6000600260975403610e025760405162461bcd60e51b81526004016102f8906118b4565b6002609755610e11338361121b565b600160975592915050565b6033546001600160a01b03163314610e465760405162461bcd60e51b81526004016102f890611a23565b6001600160a01b038116610eab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f8565b610eb4816114e7565b50565b6000600260975403610edb5760405162461bcd60e51b81526004016102f8906118b4565b600260975560cb54604080516371ca337d60e01b815290516000926001600160a01b0316916371ca337d9160048083019260209291908290030181865afa158015610f2a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4e9190611925565b90506000670de0b6b3a7640000610f6583866119b1565b610f6f91906119d0565b60cb546040516370a0823160e01b815291925082916001600160a01b03909116906370a0823190610fa490309060040161182f565b602060405180830381865afa158015610fc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fe59190611925565b10156110035760405162461bcd60e51b81526004016102f890611a58565b33600090815260cf6020526040902054848110156110335760405162461bcd60e51b81526004016102f890611a8f565b33600090815260cf602052604081208054879290611052908490611954565b909155505060ca54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac906110899033908990600401611a0a565b600060405180830381600087803b1580156110a357600080fd5b505af11580156110b7573d6000803e3d6000fd5b505033600090815260ce6020526040812080548694509092506110db908490611954565b909155505060cb5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906111129089908690600401611a0a565b6020604051808303816000875af1158015611131573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611155919061198f565b506040518281526001600160a01b0387169033907fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb9060200160405180910390a3506001609755949350505050565b60cb546040516370a0823160e01b81526000916001600160a01b0316906370a08231906111d590309060040161182f565b602060405180830381865afa1580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190611925565b905090565b60405163223888c160e01b81526000908190309063223888c19061124390879060040161182f565b602060405180830381865afa158015611260573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112849190611925565b9050600081116112d65760405162461bcd60e51b815260206004820152601a60248201527f6861736e277420676f74207969656c647320746f20636c61696d00000000000060448201526064016102f8565b6001600160a01b038416600090815260cd6020526040812080548392906112fe9084906119f2565b909155505060cb5460405163a9059cbb60e01b81526001600160a01b039091169063a9059cbb906113359086908590600401611a0a565b6020604051808303816000875af1158015611354573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611378919061198f565b50826001600160a01b0316846001600160a01b03167ff7a40077ff7a04c7e61f6f26fb13774259ddf1b6bce9ecf26a8276cdd3992683836040516113be91815260200190565b60405180910390a39392505050565b60008054610100900460ff1615611414578160ff1660011480156113f05750303b155b61140c5760405162461bcd60e51b81526004016102f890611abd565b506000919050565b60005460ff80841691161061143b5760405162461bcd60e51b81526004016102f890611abd565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff166114815760405162461bcd60e51b81526004016102f890611b0b565b6109ee611539565b600054610100900460ff166114b05760405162461bcd60e51b81526004016102f890611b0b565b6109ee611569565b600054610100900460ff166114df5760405162461bcd60e51b81526004016102f890611b0b565b6109ee61159c565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff166115605760405162461bcd60e51b81526004016102f890611b0b565b6109ee336114e7565b600054610100900460ff166115905760405162461bcd60e51b81526004016102f890611b0b565b6065805460ff19169055565b600054610100900460ff166115c35760405162461bcd60e51b81526004016102f890611b0b565b6001609755565b8280546115d6906118eb565b90600052602060002090601f0160209004810192826115f8576000855561163e565b82601f1061161157805160ff191683800117855561163e565b8280016001018555821561163e579182015b8281111561163e578251825591602001919060010190611623565b5061164a92915061164e565b5090565b5b8082111561164a576000815560010161164f565b80356001600160a01b038116811461145557600080fd5b6000806040838503121561168d57600080fd5b61169683611663565b91506116a460208401611663565b90509250929050565b600060208083528351808285015260005b818110156116da578581018301518582016040015282016116be565b818111156116ec576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561171457600080fd5b610dd782611663565b6000806040838503121561173057600080fd5b61173983611663565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060006060848603121561177257600080fd5b833567ffffffffffffffff8082111561178a57600080fd5b818601915086601f83011261179e57600080fd5b8135818111156117b0576117b0611747565b604051601f8201601f19908116603f011681019083821181831017156117d8576117d8611747565b816040528281528960208487010111156117f157600080fd5b82602086016020830137600060208483010152809750505050505061181860208501611663565b915061182660408501611663565b90509250925092565b6001600160a01b0391909116815260200190565b60008060006060848603121561185857600080fd5b61186184611663565b925061186f60208501611663565b9150604084013590509250925092565b6020808252818101527f4e6f7420616c6c6f7765643a20796f757220617265206e6f7420726f75746572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600181811c908216806118ff57607f821691505b60208210810361191f57634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561193757600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156119665761196661193e565b500390565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6000602082840312156119a157600080fd5b81518015158114610dd757600080fd5b60008160001904831182151516156119cb576119cb61193e565b500290565b6000826119ed57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611a0557611a0561193e565b500190565b6001600160a01b03929092168252602082015260400190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f6e6f74207375636820616d6f756e7420696e20746865207661756c7400000000604082015260600190565b602080825260149082015273696e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea2646970667358221220fdb47191d6f06a67d23ee7728cb01ba0d5b470725319b9c9c3afc51947a00a4d64736f6c634300080d0033";

type CeVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CeVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CeVault__factory extends ContractFactory {
  constructor(...args: CeVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CeVault> {
    return super.deploy(overrides || {}) as Promise<CeVault>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CeVault {
    return super.attach(address) as CeVault;
  }
  override connect(signer: Signer): CeVault__factory {
    return super.connect(signer) as CeVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CeVaultInterface {
    return new utils.Interface(_abi) as CeVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CeVault {
    return new Contract(address, _abi, signerOrProvider) as CeVault;
  }
}
