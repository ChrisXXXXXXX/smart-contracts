/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelioProvider,
  HelioProviderInterface,
} from "../../../contracts/ceros/HelioProvider";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
    ],
    name: "ChangeCeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "ceTokenJoin",
        type: "address",
      },
    ],
    name: "ChangeCeTokenJoin",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "certToken",
        type: "address",
      },
    ],
    name: "ChangeCertToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
    ],
    name: "ChangeCollateralToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "ChangeDao",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "dex",
        type: "address",
      },
    ],
    name: "ChangeDex",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "ChangePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "ChangeVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
    ],
    name: "changeCeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
    ],
    name: "changeCollateralToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dao",
        type: "address",
      },
    ],
    name: "changeDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "claimInABNBc",
    outputs: [
      {
        internalType: "uint256",
        name: "yields",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "daoBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "daoMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "certToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "ceToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "ceRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "daoAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "liquidation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "provide",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "provideInABNBc",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [
      {
        internalType: "uint256",
        name: "realAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "releaseInABNBc",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611566806100206000396000f3fe6080604052600436106100d35760003560e01c80637d6ae6f61161007a5780637d6ae6f6146101e55780638da5cb5b14610205578063b947253514610227578063cc2a9a5b1461022f578063d8826fec1461024f578063df3d23ae1461026f578063e3b0963a1461028f578063f2fde38b146102af57600080fd5b80630357371d146100d857806314866aef1461010b578063232da7fe1461012d57806332b038a31461014d5780633fd44f171461016d5780635c975abb1461018d5780636f2bb86a146101b0578063715018a6146101d0575b600080fd5b3480156100e457600080fd5b506100f86100f336600461129c565b6102cf565b6040519081526020015b60405180910390f35b34801561011757600080fd5b5061012b61012636600461129c565b6104a3565b005b34801561013957600080fd5b5061012b6101483660046112c6565b610584565b34801561015957600080fd5b506100f86101683660046112e8565b610609565b34801561017957600080fd5b5061012b6101883660046112c6565b6106f3565b34801561019957600080fd5b5060655460ff166040519015158152602001610102565b3480156101bc57600080fd5b5061012b6101cb36600461129c565b61076d565b3480156101dc57600080fd5b5061012b610860565b3480156101f157600080fd5b506100f861020036600461129c565b61089b565b34801561021157600080fd5b5061021a61098f565b6040516101029190611301565b6100f861099e565b34801561023b57600080fd5b5061012b61024a366004611315565b610a81565b34801561025b57600080fd5b5061012b61026a3660046112c6565b610be6565b34801561027b57600080fd5b5061012b61028a36600461129c565b610c60565b34801561029b57600080fd5b506100f86102aa3660046112c6565b610d06565b3480156102bb57600080fd5b5061012b6102ca3660046112c6565b610e54565b60006002609754036102fc5760405162461bcd60e51b81526004016102f390611389565b60405180910390fd5b600260975560cf5460408051631b377a4f60e31b815290516000926001600160a01b03169163d9bbd2789160048083019260209291908290030181865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f91906113c0565b9050808310156103d75760405162461bcd60e51b815260206004820152602d60248201527f76616c7565206d7573742062652067726561746572207468616e206d696e207560448201526c1b9cdd185ad948185b5bdd5b9d609a1b60648201526084016102f3565b6103e13384610ef4565b60cd5460405163f3fef3a360e01b81526001600160a01b039091169063f3fef3a39061041390879087906004016113d9565b6020604051808303816000875af1158015610432573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045691906113c0565b506040518281526001600160a01b0385169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63989060200160405180910390a350600160975592915050565b6104ab61098f565b6001600160a01b0316336001600160a01b031614806104d4575060ce546001600160a01b031633145b6104f05760405162461bcd60e51b81526004016102f3906113f2565b6002609754036105125760405162461bcd60e51b81526004016102f390611389565b600260975560cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f199061054990859085906004016113d9565b600060405180830381600087803b15801561056357600080fd5b505af1158015610577573d6000803e3d6000fd5b5050600160975550505050565b3361058d61098f565b6001600160a01b0316146105b35760405162461bcd60e51b81526004016102f39061141c565b60cc80546001600160a01b0319166001600160a01b0383161790556040517f5ab190ac1b858818c30b831d9bd74e6bef6f75de987d59f1beb4aab85d064832906105fe908390611301565b60405180910390a150565b600060026097540361062d5760405162461bcd60e51b81526004016102f390611389565b600260975560cd54604051631f16e81d60e01b81526001600160a01b0390911690631f16e81d9061066490339086906004016113d9565b6020604051808303816000875af1158015610683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106a791906113c0565b90506106b33382610fd9565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c906020015b60405180910390a26001609755919050565b336106fc61098f565b6001600160a01b0316146107225760405162461bcd60e51b81526004016102f39061141c565b60cb80546001600160a01b0319166001600160a01b0383161790556040517f1c51d83fbf878c22f78dd72bd5f93a9adfa124683a91b2ad431f10c9ff731db4906105fe908390611301565b61077561098f565b6001600160a01b0316336001600160a01b0316148061079e575060ce546001600160a01b031633145b6107ba5760405162461bcd60e51b81526004016102f3906113f2565b6002609754036107dc5760405162461bcd60e51b81526004016102f390611389565b600260975560cd546040516301aa86ab60e11b81526001600160a01b03909116906303550d569061081390859085906004016113d9565b6020604051808303816000875af1158015610832573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085691906113c0565b5050600160975550565b3361086961098f565b6001600160a01b03161461088f5760405162461bcd60e51b81526004016102f39061141c565b6108996000611088565b565b60006002609754036108bf5760405162461bcd60e51b81526004016102f390611389565b60026097556108ce3383610ef4565b60cd546040516301aa86ab60e11b81526001600160a01b03909116906303550d569061090090869086906004016113d9565b6020604051808303816000875af115801561091f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094391906113c0565b506040518281526001600160a01b0384169033907f2717ead6b9200dd235aad468c9809ea400fe33ac69b5bfaa6d3e90fc922b63989060200160405180910390a3600160975592915050565b6033546001600160a01b031690565b60006002609754036109c25760405162461bcd60e51b81526004016102f390611389565b600260975560cd5460408051630d0e30db60e41b815290516001600160a01b039092169163d0e30db09134916004808301926020929190829003018185885af1158015610a13573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610a3891906113c0565b9050610a443382610fd9565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a2600160975590565b6000610a8d60016110da565b90508015610aa5576000805461ff0019166101001790555b610aad611167565b610ab5611196565b610abd6111c5565b60c98054336001600160a01b03199182161790915560cc805482166001600160a01b038a81169190911790915560ca8054831689831617905560cb8054831688831690811790915560cd8054841688841617905560ce8054841687841617905560cf80549093169185169190911790915560405163095ea7b360e01b815263095ea7b390610b53908690600019906004016113d9565b6020604051808303816000875af1158015610b72573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b969190611451565b508015610bdd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b33610bef61098f565b6001600160a01b031614610c155760405162461bcd60e51b81526004016102f39061141c565b60ce80546001600160a01b0319166001600160a01b0383161790556040517f31a1aa5f369c073ebb0b9d07b962961a2fcaf8ae160e6485f220450f9d7f8c53906105fe908390611301565b610c6861098f565b6001600160a01b0316336001600160a01b03161480610c91575060ce546001600160a01b031633145b610cad5760405162461bcd60e51b81526004016102f3906113f2565b600260975403610ccf5760405162461bcd60e51b81526004016102f390611389565b600260975560cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac9061054990859085906004016113d9565b6000600260975403610d2a5760405162461bcd60e51b81526004016102f390611389565b6002609755610d3761098f565b6001600160a01b0316336001600160a01b03161480610d60575060c9546001600160a01b031633145b610da45760405162461bcd60e51b815260206004820152601560248201527413dc195c985d1bdc8e881b9bdd08185b1b1bddd959605a1b60448201526064016102f3565b60cd54604051630f41a04d60e11b81526001600160a01b0390911690631e83409a90610dd4908590600401611301565b6020604051808303816000875af1158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1791906113c0565b9050816001600160a01b03167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4826040516106e191815260200190565b33610e5d61098f565b6001600160a01b031614610e835760405162461bcd60e51b81526004016102f39061141c565b6001600160a01b038116610ee85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f3565b610ef181611088565b50565b60ce5460cb54604051636ce5768960e11b81526001600160a01b039283169263d9caed1292610f2d928792909116908690600401611473565b6020604051808303816000875af1158015610f4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7091906113c0565b5060cc54604051632770a7eb60e21b81526001600160a01b0390911690639dc29fac90610fa390859085906004016113d9565b600060405180830381600087803b158015610fbd57600080fd5b505af1158015610fd1573d6000803e3d6000fd5b505050505050565b60ce5460cb54604051638340f54960e01b81526001600160a01b0392831692638340f54992611012928792909116908690600401611473565b6020604051808303816000875af1158015611031573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105591906113c0565b5060cc546040516340c10f1960e01b81526001600160a01b03909116906340c10f1990610fa390859085906004016113d9565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008054610100900460ff1615611121578160ff1660011480156110fd5750303b155b6111195760405162461bcd60e51b81526004016102f390611497565b506000919050565b60005460ff8084169116106111485760405162461bcd60e51b81526004016102f390611497565b506000805460ff191660ff92909216919091179055600190565b919050565b600054610100900460ff1661118e5760405162461bcd60e51b81526004016102f3906114e5565b6108996111f4565b600054610100900460ff166111bd5760405162461bcd60e51b81526004016102f3906114e5565b610899611224565b600054610100900460ff166111ec5760405162461bcd60e51b81526004016102f3906114e5565b610899611257565b600054610100900460ff1661121b5760405162461bcd60e51b81526004016102f3906114e5565b61089933611088565b600054610100900460ff1661124b5760405162461bcd60e51b81526004016102f3906114e5565b6065805460ff19169055565b600054610100900460ff1661127e5760405162461bcd60e51b81526004016102f3906114e5565b6001609755565b80356001600160a01b038116811461116257600080fd5b600080604083850312156112af57600080fd5b6112b883611285565b946020939093013593505050565b6000602082840312156112d857600080fd5b6112e182611285565b9392505050565b6000602082840312156112fa57600080fd5b5035919050565b6001600160a01b0391909116815260200190565b60008060008060008060c0878903121561132e57600080fd5b61133787611285565b955061134560208801611285565b945061135360408801611285565b935061136160608801611285565b925061136f60808801611285565b915061137d60a08801611285565b90509295509295509295565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000602082840312156113d257600080fd5b5051919050565b6001600160a01b03929092168252602082015260400190565b60208082526010908201526f11185bce881b9bdd08185b1b1bddd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561146357600080fd5b815180151581146112e157600080fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea264697066735822122092c4b610b5b9a73b8940f8b76780c9387369fc16170b61b4ff224d51a0c5e28e64736f6c634300080d0033";

type HelioProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelioProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelioProvider__factory extends ContractFactory {
  constructor(...args: HelioProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HelioProvider> {
    return super.deploy(overrides || {}) as Promise<HelioProvider>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelioProvider {
    return super.attach(address) as HelioProvider;
  }
  override connect(signer: Signer): HelioProvider__factory {
    return super.connect(signer) as HelioProvider__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelioProviderInterface {
    return new utils.Interface(_abi) as HelioProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelioProvider {
    return new Contract(address, _abi, signerOrProvider) as HelioProvider;
  }
}
