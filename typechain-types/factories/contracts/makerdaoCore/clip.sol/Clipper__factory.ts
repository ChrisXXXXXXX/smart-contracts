/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Clipper,
  ClipperInterface,
} from "../../../../contracts/makerdaoCore/clip.sol/Clipper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spotter_",
        type: "address",
      },
      {
        internalType: "address",
        name: "dog_",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "ilk_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Deny",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "File",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "File",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "kpr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coin",
        type: "uint256",
      },
    ],
    name: "Kick",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "kpr",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "coin",
        type: "uint256",
      },
    ],
    name: "Redo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Rely",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "owe",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "Take",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Yank",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "active",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "calc",
    outputs: [
      {
        internalType: "contract AbacusLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chip",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cusp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dog",
    outputs: [
      {
        internalType: "contract DogLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "data",
        type: "uint256",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "what",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "data",
        type: "address",
      },
    ],
    name: "file",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getStatus",
    outputs: [
      {
        internalType: "bool",
        name: "needsRedo",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilk",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "kick",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "redo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "sales",
    outputs: [
      {
        internalType: "uint256",
        name: "pos",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "tic",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "top",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "spotter",
    outputs: [
      {
        internalType: "contract SpotterLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tail",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tip",
    outputs: [
      {
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upchost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract VatLike",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "yank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000600e553480156200001657600080fd5b50604051620024d8380380620024d88339810160408190526200003991620000e5565b6001600160a01b0384811660a052600380546001600160a01b0319908116868416179091556001805490911691841691909117815560808290526b033b2e3c9fd0803ce80000006005553360008181526020819052604080822093909355915190917fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a6091a25050505062000137565b80516001600160a01b0381168114620000e057600080fd5b919050565b60008060008060808587031215620000fc57600080fd5b6200010785620000c8565b93506200011760208601620000c8565b92506200012760408601620000c8565b6060959095015193969295505050565b60805160a05161230b620001cd60003960008181610264015281816104df015281816107a401528181610d7701528181610e3201528181610f0b0152818161104c0152818161143c01526118aa015260008181610456015281816104b6015281816105660152818161070a015281816107d201528181610da601528181610f88015281816110790152611bcc015261230b6000f3fe608060405234801561001057600080fd5b506004361061018f5760003560e01c806375f12b21116100e4578063b61500e411610092578063b61500e4146103ea578063ba2cdc7514610415578063bf353dbb1461041e578063c3b3ad7f1461043e578063c5ce281e14610451578063cfdd330214610478578063d4e8be8314610481578063d843416d1461049457600080fd5b806375f12b21146102ea5780638033d581146102f357806381a794cb14610306578063898eb2671461031957806396f1b6be1461032c5780639c52a7f11461033f578063b5f522f71461035257600080fd5b806329ae81141161014157806329ae8114146102215780632e77468d1461023457806336569e771461025f57806349ed5931146102865780635c622a0e1461028f578063626cb3c5146102c457806365fae35e146102d757600080fd5b806306661abd146101945780630cbb5862146101ab5780630f560cd7146101b557806313d8c840146101ca57806315232515146101d357806326e027f1146101dc5780632755cd2d146101ef575b600080fd5b600b545b6040519081526020015b60405180910390f35b6101b36104a7565b005b6101bd6105f8565b6040516101a29190611dfd565b61019860065481565b61019860055481565b6101b36101ea366004611e41565b610650565b60085461020990600160401b90046001600160c01b031681565b6040516001600160c01b0390911681526020016101a2565b6101b361022f366004611e5a565b610875565b600354610247906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b6102477f000000000000000000000000000000000000000000000000000000000000000081565b61019860075481565b6102a261029d366004611e41565b610a18565b60408051941515855260208501939093529183015260608201526080016101a2565b600254610247906001600160a01b031681565b6101b36102e5366004611e94565b610aa4565b610198600e5481565b610198610301366004611e41565b610b18565b6101b3610314366004611eb1565b610b39565b610198610327366004611f51565b61116e565b600454610247906001600160a01b031681565b6101b361034d366004611e94565b611516565b6103ab610360366004611e41565b600c60205260009081526040902080546001820154600283015460038401546004909401549293919290916001600160a01b03811691600160a01b9091046001600160601b03169086565b604080519687526020870195909552938501929092526001600160a01b031660608401526001600160601b0316608083015260a082015260c0016101a2565b6008546103fd906001600160401b031681565b6040516001600160401b0390911681526020016101a2565b61019860095481565b61019861042c366004611e94565b60006020819052908152604090205481565b600154610247906001600160a01b031681565b6101987f000000000000000000000000000000000000000000000000000000000000000081565b610198600a5481565b6101b361048f366004611f9b565b611589565b6101b36104a2366004611f9b565b6116ce565b604051636cb1c69b60e11b81527f000000000000000000000000000000000000000000000000000000000000000060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d9638d369060240160a0604051808303816000875af1158015610530573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105549190611fcb565b600154604051631af24ca760e31b81527f000000000000000000000000000000000000000000000000000000000000000060048201529196506105f295508694506001600160a01b0316925063d792653891506024016020604051808303816000875af11580156105c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ed919061200b565b6119b0565b60095550565b6060600b80548060200260200160405190810160405280929190818152602001828054801561064657602002820191906000526020600020905b815481526020019060010190808311610632575b5050505050905090565b336000908152602081905260409020546001146106885760405162461bcd60e51b815260040161067f90612024565b60405180910390fd5b600d54156106a85760405162461bcd60e51b815260040161067f90612054565b6001600d556000818152600c60205260409020600301546001600160a01b03166106e45760405162461bcd60e51b815260040161067f90612083565b600180546000838152600c60205260409081902090920154915163321c64fd60e21b81527f0000000000000000000000000000000000000000000000000000000000000000600482015260248101929092526001600160a01b03169063c87193f490604401600060405180830381600087803b15801561076357600080fd5b505af1158015610777573d6000803e3d6000fd5b5050506000828152600c602052604090819020600201549051633088df1760e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169250636111be2e916107ff917f00000000000000000000000000000000000000000000000000000000000000009130913391906004016120ba565b600060405180830381600087803b15801561081957600080fd5b505af115801561082d573d6000803e3d6000fd5b5050505061083a816119d6565b6040518181527f2c5d2826eb5903b8fc201cf48094b858f42f61c7eaac9aaf43ebed490138144e9060200160405180910390a1506000600d55565b336000908152602081905260409020546001146108a45760405162461bcd60e51b815260040161067f90612024565b600d54156108c45760405162461bcd60e51b815260040161067f90612054565b6001600d5562313ab360e91b8290036108e15760058190556109d5565b81631d185a5b60e21b036108f95760068190556109d5565b81630637573760e41b036109115760078190556109d5565b81630636869760e41b03610940576008805467ffffffffffffffff19166001600160401b0383161790556109d5565b816207469760ec1b0361097257600880546001600160401b0316600160401b6001600160c01b038416021790556109d5565b81661cdd1bdc1c195960ca1b0361098d57600e8190556109d5565b60405162461bcd60e51b815260206004820152601f60248201527f436c69707065722f66696c652d756e7265636f676e697a65642d706172616d00604482015260640161067f565b817fe986e40cc8c151830d4f61050f4fb2e4add8567caad2d5f5496f9158e91fe4c782604051610a0791815260200190565b60405180910390a250506000600d55565b6000818152600c6020526040812060038101546004909101548291829182916001600160a01b03811691600160a01b9091046001600160601b0316908390610a61908390611aaa565b965090506001600160a01b03831615801590610a7a5750805b6000988952600c602052604090982060028101546001909101549899969890975095945050505050565b33600090815260208190526040902054600114610ad35760405162461bcd60e51b815260040161067f90612024565b6001600160a01b03811660008181526020819052604080822060019055517fdd0e34038ac38b2a1ce960229778ac48a8719bc900b6c4f8d0475c6e8b385a609190a250565b600b8181548110610b2857600080fd5b600091825260209091200154905081565b600d5415610b595760405162461bcd60e51b815260040161067f90612054565b6001600d55600e546003908111610b825760405162461bcd60e51b815260040161067f906120df565b6000878152600c60205260409020600301546001600160a01b03811690600160a01b90046001600160601b031681610bcc5760405162461bcd60e51b815260040161067f90612083565b6000898152600c60205260408120600401548190610beb908490611aaa565b925090508015610c335760405162461bcd60e51b815260206004820152601360248201527210db1a5c1c195c8bdb9959591ccb5c995cd95d606a1b604482015260640161067f565b5080881015610c7c5760405162461bcd60e51b8152602060048201526015602482015274436c69707065722f746f6f2d657870656e7369766560581b604482015260640161067f565b60008a8152600c602052604081206002810154600190910154909180610ca2848e611b70565b9050610cae8186611b87565b915082821115610ccc57829150610cc58583612128565b9050610d5d565b8282108015610cda57508381105b15610d5d5760095480610ced848661214a565b1015610d5b57808411610d425760405162461bcd60e51b815260206004820152601b60248201527f436c69707065722f6e6f2d7061727469616c2d70757263686173650000000000604482015260640161067f565b610d4c818561214a565b9250610d588684612128565b91505b505b610d67828461214a565b9250610d73818561214a565b93507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636111be2e7f0000000000000000000000000000000000000000000000000000000000000000308e856040518563ffffffff1660e01b8152600401610de794939291906120ba565b600060405180830381600087803b158015610e0157600080fd5b505af1158015610e15573d6000803e3d6000fd5b50506001546001600160a01b03169150508915801590610e6757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168c6001600160a01b031614155b8015610e855750806001600160a01b03168c6001600160a01b031614155b15610ef1578b6001600160a01b0316638452c10e3385858f8f6040518663ffffffff1660e01b8152600401610ebe959493929190612161565b600060405180830381600087803b158015610ed857600080fd5b505af1158015610eec573d6000803e3d6000fd5b505050505b60025460405163bb35783b60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263bb35783b92610f45923392169088906004016121ad565b600060405180830381600087803b158015610f5f57600080fd5b505af1158015610f73573d6000803e3d6000fd5b50505050806001600160a01b031663c87193f47f000000000000000000000000000000000000000000000000000000000000000087600014610fb55785610fbf565b610fbf86886121d1565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610ffd57600080fd5b505af1158015611011573d6000803e3d6000fd5b5050505050508260000361102d576110288d6119d6565b6110fe565b816000036110e257604051633088df1760e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636111be2e906110a7907f00000000000000000000000000000000000000000000000000000000000000009030908b9089906004016120ba565b600060405180830381600087803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b505050506110288d6119d6565b60008d8152600c60205260409020600181018390556002018390555b604080518c81526020810186905290810182905260608101839052608081018490526001600160a01b038716908e907f05e309fd6ce72f2ab888a20056bb4210df08daed86f21f95053deb19964d86b19060a00160405180910390a350506000600d555050505050505050505050565b3360009081526020819052604081205460011461119d5760405162461bcd60e51b815260040161067f90612024565b600d54156111bd5760405162461bcd60e51b815260040161067f90612054565b6001600d819055600e5481116111e55760405162461bcd60e51b815260040161067f906120df565b600086116112285760405162461bcd60e51b815260206004820152601060248201526f21b634b83832b917bd32b93796ba30b160811b604482015260640161067f565b6000851161126b5760405162461bcd60e51b815260206004820152601060248201526f10db1a5c1c195c8bde995c9bcb5b1bdd60821b604482015260640161067f565b6001600160a01b0384166112b45760405162461bcd60e51b815260206004820152601060248201526f21b634b83832b917bd32b93796bab9b960811b604482015260640161067f565b600a600081546112c3906121e9565b918290555091508161130a5760405162461bcd60e51b815260206004820152601060248201526f436c69707065722f6f766572666c6f7760801b604482015260640161067f565b600b80546001818101835560008390527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9909101849055905461134d919061214a565b6000838152600c6020526040812091825560018201889055600282018790556001600160601b034216600160a01b026001600160a01b038716176003909201919091556113a361139b611bba565b600554611d95565b9050600081116113c55760405162461bcd60e51b815260040161067f90612202565b6000838152600c602052604081206004018290556008546001600160c01b03600160401b820416916001600160401b0390911690821515806114075750600082115b156114a95761141f8361141a8c856119b0565b611dae565b60025460405163f24e23eb60e01b81529192506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169263f24e23eb926114769216908b9086906004016121ad565b600060405180830381600087803b15801561149057600080fd5b505af11580156114a4573d6000803e3d6000fd5b505050505b60408051858152602081018c90529081018a9052606081018290526001600160a01b0380891691908a169088907f7c5bfdc0a5e8192f6cd4972f382cec69116862fb62e6abff8003874c58e064b89060800160405180910390a450506000600d5550919695505050505050565b336000908152602081905260409020546001146115455760405162461bcd60e51b815260040161067f90612024565b6001600160a01b038116600081815260208190526040808220829055517f184450df2e323acec0ed3b5c7531b81f9b4cdef7914dfd4c0a4317416bb5251b9190a250565b336000908152602081905260409020546001146115b85760405162461bcd60e51b815260040161067f90612024565b600d54156115d85760405162461bcd60e51b815260040161067f90612054565b6001600d556639b837ba3a32b960c91b82900361160f57600380546001600160a01b0319166001600160a01b038316179055611693565b8162646f6760e81b0361163c57600180546001600160a01b0319166001600160a01b038316179055611693565b8162766f7760e81b0361166957600280546001600160a01b0319166001600160a01b038316179055611693565b816363616c6360e01b0361098d57600480546001600160a01b0319166001600160a01b0383161790555b6040516001600160a01b038216815282907f8fef588b5fc1afbf5b2f06c1a435d513f208da2e6704c3d8f0e0ec91167066ba90602001610a07565b600d54156116ee5760405162461bcd60e51b815260040161067f90612054565b6001600d55600e5460029081116117175760405162461bcd60e51b815260040161067f906120df565b6000838152600c6020526040902060038101546004909101546001600160a01b03821691600160a01b90046001600160601b031690826117695760405162461bcd60e51b815260040161067f90612083565b60006117758383611aaa565b509050806117bc5760405162461bcd60e51b815260206004820152601460248201527310db1a5c1c195c8bd8d85b9b9bdd0b5c995cd95d60621b604482015260640161067f565b6000878152600c6020526040812060018101546002820154600390920180546001600160a01b0316600160a01b426001600160601b03160217905591611800611bba565b905061180e81600554611d95565b9450600085116118305760405162461bcd60e51b815260040161067f90612202565b60008a8152600c602052604081206004018690556008546001600160c01b03600160401b820416916001600160401b0390911690821515806118725750600082115b15611942576009548087108015906118935750806118908787611b87565b10155b15611940576118a68461141a89866119b0565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f24e23eb600260009054906101000a90046001600160a01b03168f856040518463ffffffff1660e01b815260040161190d939291906121ad565b600060405180830381600087803b15801561192757600080fd5b505af115801561193b573d6000803e3d6000fd5b505050505b505b6040805189815260208101889052908101869052606081018290526001600160a01b03808e1691908c16908f907f275de7ecdd375b5e8049319f8b350686131c219dd4dc450a08e9cf83b03c865f9060800160405180910390a450506000600d555050505050505050505050565b6000670de0b6b3a76400006119c58484611b87565b6119cf9190612128565b9392505050565b600b8054600091906119ea9060019061214a565b815481106119fa576119fa612232565b90600052602060002001549050808214611a53576000828152600c6020526040902054600b805483919083908110611a3457611a34612232565b6000918252602080832090910192909255838152600c90915260409020555b600b805480611a6457611a64612248565b600082815260208082208301600019908101839055909201909255928152600c909252506040812081815560018101829055600281018290556003810182905560040155565b60045460009081906001600160a01b031663487a239584611ad4426001600160601b038916611dc9565b6040516001600160e01b031960e085901b16815260048101929092526024820152604401602060405180830381865afa158015611b15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b39919061200b565b9050600654611b5142866001600160601b0316611dc9565b1180611b675750600754611b658285611de4565b105b91509250929050565b600081831115611b8057816119cf565b5090919050565b6000811580611bab57508282611b9d818361225e565b9250611ba99083612128565b145b611bb457600080fd5b92915050565b600354604051636cb1c69b60e11b81527f0000000000000000000000000000000000000000000000000000000000000000600482015260009182916001600160a01b039091169063d9638d369060240160408051808303816000875af1158015611c28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4c919061227d565b509050600080826001600160a01b03166359e02dd76040518163ffffffff1660e01b815260040160408051808303816000875af1158015611c91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cb591906122ab565b9150915080611cfe5760405162461bcd60e51b8152602060048201526015602482015274436c69707065722f696e76616c69642d707269636560581b604482015260640161067f565b611d8d611d0f83633b9aca00611b87565b600360009054906101000a90046001600160a01b03166001600160a01b031663495d32cb6040518163ffffffff1660e01b81526004016020604051808303816000875af1158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d88919061200b565b611de4565b935050505090565b60006b033b2e3c9fd0803ce80000006119c58484611b87565b600082611dbb83826121d1565b9150811015611bb457600080fd5b600082611dd6838261214a565b9150811115611bb457600080fd5b6000816119c5846b033b2e3c9fd0803ce8000000611b87565b6020808252825182820181905260009190848201906040850190845b81811015611e3557835183529284019291840191600101611e19565b50909695505050505050565b600060208284031215611e5357600080fd5b5035919050565b60008060408385031215611e6d57600080fd5b50508035926020909101359150565b6001600160a01b0381168114611e9157600080fd5b50565b600060208284031215611ea657600080fd5b81356119cf81611e7c565b60008060008060008060a08789031215611eca57600080fd5b8635955060208701359450604087013593506060870135611eea81611e7c565b925060808701356001600160401b0380821115611f0657600080fd5b818901915089601f830112611f1a57600080fd5b813581811115611f2957600080fd5b8a6020828501011115611f3b57600080fd5b6020830194508093505050509295509295509295565b60008060008060808587031215611f6757600080fd5b84359350602085013592506040850135611f8081611e7c565b91506060850135611f9081611e7c565b939692955090935050565b60008060408385031215611fae57600080fd5b823591506020830135611fc081611e7c565b809150509250929050565b600080600080600060a08688031215611fe357600080fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60006020828403121561201d57600080fd5b5051919050565b60208082526016908201527510db1a5c1c195c8bdb9bdd0b585d5d1a1bdc9a5e995960521b604082015260600190565b60208082526015908201527410db1a5c1c195c8bdcde5cdd195b4b5b1bd8dad959605a1b604082015260600190565b6020808252601b908201527f436c69707065722f6e6f742d72756e6e696e672d61756374696f6e0000000000604082015260600190565b9384526001600160a01b03928316602085015291166040830152606082015260800190565b60208082526019908201527810db1a5c1c195c8bdcdd1bdc1c19590b5a5b98dbdc9c9958dd603a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008261214557634e487b7160e01b600052601260045260246000fd5b500490565b60008282101561215c5761215c612112565b500390565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600082198211156121e4576121e4612112565b500190565b6000600182016121fb576121fb612112565b5060010190565b602080825260169082015275436c69707065722f7a65726f2d746f702d707269636560501b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b600081600019048311821515161561227857612278612112565b500290565b6000806040838503121561229057600080fd5b825161229b81611e7c565b6020939093015192949293505050565b600080604083850312156122be57600080fd5b8251915060208301518015158114611fc057600080fdfea2646970667358221220ae0735e5033ddc6070f9529ae647f09b17d35f74e598db1899ed2f33b6407ddd64736f6c634300080d0033";

type ClipperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ClipperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Clipper__factory extends ContractFactory {
  constructor(...args: ClipperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vat_: string,
    spotter_: string,
    dog_: string,
    ilk_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Clipper> {
    return super.deploy(
      vat_,
      spotter_,
      dog_,
      ilk_,
      overrides || {}
    ) as Promise<Clipper>;
  }
  override getDeployTransaction(
    vat_: string,
    spotter_: string,
    dog_: string,
    ilk_: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      vat_,
      spotter_,
      dog_,
      ilk_,
      overrides || {}
    );
  }
  override attach(address: string): Clipper {
    return super.attach(address) as Clipper;
  }
  override connect(signer: Signer): Clipper__factory {
    return super.connect(signer) as Clipper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ClipperInterface {
    return new utils.Interface(_abi) as ClipperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Clipper {
    return new Contract(address, _abi, signerOrProvider) as Clipper;
  }
}
