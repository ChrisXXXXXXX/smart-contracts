/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  HelioToken,
  HelioTokenInterface,
} from "../../contracts/HelioToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Start",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Stop",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "rely",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "start",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopped",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "wards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060408051808201825260128152712432b634b7902932bbb0b932103a37b5b2b760711b60208083019182528351808501909452600584526448454c494f60d81b90840152815191929162000069916003916200009b565b5080516200007f9060049060208401906200009b565b505033600090815260066020526040902060019055506200017d565b828054620000a99062000141565b90600052602060002090601f016020900481019282620000cd576000855562000118565b82601f10620000e857805160ff191683800117855562000118565b8280016001018555821562000118579182015b8281111562000118578251825591602001919060010190620000fb565b50620001269291506200012a565b5090565b5b808211156200012657600081556001016200012b565b600181811c908216806200015657607f821691505b6020821081036200017757634e487b7160e01b600052602260045260246000fd5b50919050565b610e47806200018d6000396000f3fe608060405234801561001057600080fd5b50600436106101115760003560e01c806365fae35e116100ad578063a457c2d711610071578063a457c2d714610232578063a9059cbb14610245578063be9a655514610258578063bf353dbb14610260578063dd62ed3e1461028057600080fd5b806365fae35e146101ce57806370a08231146101e157806375f12b211461020a57806395d89b41146102175780639c52a7f11461021f57600080fd5b806306fdde031461011657806307da68f514610134578063095ea7b31461013e57806318160ddd1461016157806323b872dd14610173578063313ce56714610186578063395093511461019557806340c10f19146101a857806342966c68146101bb575b600080fd5b61011e610293565b60405161012b9190610bd5565b60405180910390f35b61013c610325565b005b61015161014c366004610c41565b610395565b604051901515815260200161012b565b6002545b60405190815260200161012b565b610151610181366004610c6b565b6103ad565b6040516012815260200161012b565b6101516101a3366004610c41565b6103d1565b6101516101b6366004610c41565b6103f3565b6101516101c9366004610ca7565b610458565b61013c6101dc366004610cc0565b6104bd565b6101656101ef366004610cc0565b6001600160a01b031660009081526020819052604090205490565b6005546101519060ff1681565b61011e610509565b61013c61022d366004610cc0565b610518565b610151610240366004610c41565b610561565b610151610253366004610c41565b6105dc565b61013c6105ea565b61016561026e366004610cc0565b60066020526000908152604090205481565b61016561028e366004610ce2565b61064e565b6060600380546102a290610d15565b80601f01602080910402602001604051908101604052809291908181526020018280546102ce90610d15565b801561031b5780601f106102f05761010080835404028352916020019161031b565b820191906000526020600020905b8154815290600101906020018083116102fe57829003601f168201915b5050505050905090565b3360009081526006602052604090205460011461035d5760405162461bcd60e51b815260040161035490610d4f565b60405180910390fd5b6005805460ff191660011790556040517fbedf0f4abfe86d4ffad593d9607fe70e83ea706033d44d24b3b6283cf3fc4f6b90600090a1565b6000336103a3818585610679565b5060019392505050565b6000336103bb85828561079e565b6103c6858585610818565b506001949350505050565b6000336103a38185856103e4838361064e565b6103ee9190610d98565b610679565b336000908152600660205260408120546001146104225760405162461bcd60e51b815260040161035490610d4f565b60055460ff16156104455760405162461bcd60e51b815260040161035490610db0565b61044f83836109d4565b50600192915050565b336000908152600660205260408120546001146104875760405162461bcd60e51b815260040161035490610d4f565b60055460ff16156104aa5760405162461bcd60e51b815260040161035490610db0565b6104b43383610aa1565b5060015b919050565b336000908152600660205260409020546001146104ec5760405162461bcd60e51b815260040161035490610d4f565b6001600160a01b0316600090815260066020526040902060019055565b6060600480546102a290610d15565b336000908152600660205260409020546001146105475760405162461bcd60e51b815260040161035490610d4f565b6001600160a01b0316600090815260066020526040812055565b6000338161056f828661064e565b9050838110156105cf5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610354565b6103c68286868403610679565b6000336103a3818585610818565b336000908152600660205260409020546001146106195760405162461bcd60e51b815260040161035490610d4f565b6005805460ff191690556040517f1b55ba3aa851a46be3b365aee5b5c140edd620d578922f3e8466d2cbd96f954b90600090a1565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106db5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610354565b6001600160a01b03821661073c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610354565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107aa848461064e565b9050600019811461081257818110156108055760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610354565b6108128484848403610679565b50505050565b6001600160a01b03831661087c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610354565b6001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610354565b6001600160a01b038316600090815260208190526040902054818110156109565760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610354565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061098d908490610d98565b92505081905550826001600160a01b0316846001600160a01b0316600080516020610df2833981519152846040516109c791815260200190565b60405180910390a3610812565b6001600160a01b038216610a2a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610354565b8060026000828254610a3c9190610d98565b90915550506001600160a01b03821660009081526020819052604081208054839290610a69908490610d98565b90915550506040518181526001600160a01b03831690600090600080516020610df28339815191529060200160405180910390a35050565b6001600160a01b038216610b015760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610354565b6001600160a01b03821660009081526020819052604090205481811015610b755760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610354565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ba4908490610dda565b90915550506040518281526000906001600160a01b03851690600080516020610df283398151915290602001610791565b600060208083528351808285015260005b81811015610c0257858101830151858201604001528201610be6565b81811115610c14576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146104b857600080fd5b60008060408385031215610c5457600080fd5b610c5d83610c2a565b946020939093013593505050565b600080600060608486031215610c8057600080fd5b610c8984610c2a565b9250610c9760208501610c2a565b9150604084013590509250925092565b600060208284031215610cb957600080fd5b5035919050565b600060208284031215610cd257600080fd5b610cdb82610c2a565b9392505050565b60008060408385031215610cf557600080fd5b610cfe83610c2a565b9150610d0c60208401610c2a565b90509250929050565b600181811c90821680610d2957607f821691505b602082108103610d4957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526019908201527812195b1a5bd51bdad95b8bdb9bdd0b585d5d1a1bdc9a5e9959603a1b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610dab57610dab610d82565b500190565b60208082526010908201526f1a195b1a5bcb5a5ccb5cdd1bdc1c195960821b604082015260600190565b600082821015610dec57610dec610d82565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ed3a278f1c1d58c47da427161f4acdceedfe6239f772777cd2fd12921df2d3bb64736f6c634300080d0033";

type HelioTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelioTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelioToken__factory extends ContractFactory {
  constructor(...args: HelioTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<HelioToken> {
    return super.deploy(overrides || {}) as Promise<HelioToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): HelioToken {
    return super.attach(address) as HelioToken;
  }
  override connect(signer: Signer): HelioToken__factory {
    return super.connect(signer) as HelioToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelioTokenInterface {
    return new utils.Interface(_abi) as HelioTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HelioToken {
    return new Contract(address, _abi, signerOrProvider) as HelioToken;
  }
}
