/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DssCdpManager,
  DssCdpManagerInterface,
} from "../../../contracts/DssCdpManager.sol/DssCdpManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "vat_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "own",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
    ],
    name: "NewCdp",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ok",
        type: "uint256",
      },
    ],
    name: "cdpAllow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "cdpCan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cdpi",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "src",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
    ],
    name: "enter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "first",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "flux",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "wad",
        type: "uint256",
      },
    ],
    name: "flux",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "int256",
        name: "dink",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "dart",
        type: "int256",
      },
    ],
    name: "frob",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "give",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ilks",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "last",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "prev",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "next",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "rad",
        type: "uint256",
      },
    ],
    name: "move",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
    ],
    name: "open",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "dst",
        type: "address",
      },
    ],
    name: "quit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cdpSrc",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cdpDst",
        type: "uint256",
      },
    ],
    name: "shift",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ok",
        type: "uint256",
      },
    ],
    name: "urnAllow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "urnCan",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "urns",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161187338038061187383398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6117e0806100936000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806380c9419e116100b8578063b3d178f21161007c578063b3d178f214610356578063b68f40041461035f578063e50322a214610397578063f9f30db6146103aa578063fc73d771146103bd578063fcafcc68146103dd57600080fd5b806380c9419e146102935780638161b120146102cf5780639a816f7d146102f85780639bb8f83814610318578063b2b192e61461032b57600080fd5b80632c2cb9fd1161010a5780632c2cb9fd146101f657806336569e771461021657806345e6bdcd146102295780635aebb4601461023c5780636090dec51461026d5780637e348b7d1461028057600080fd5b806305d85eda146101475780630b63fb621461017a57806318af4d601461018f5780631b0dbf72146101a25780632726b073146101b5575b600080fd5b6101676101553660046113f9565b60086020526000908152604090205481565b6040519081526020015b60405180910390f35b61018d61018836600461141b565b6103f0565b005b61018d61019d366004611450565b6104b0565b61018d6101b036600461148d565b6105a7565b6101de6101c33660046114b9565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610171565b6101676102043660046114b9565b60056020526000908152604090205481565b6000546101de906001600160a01b031681565b61018d6102373660046114d2565b6107c7565b61016761024a3660046114fe565b600960209081526000938452604080852082529284528284209052825290205481565b61016761027b36600461148d565b6108b1565b61018d61028e36600461153a565b610ab0565b6102ba6102a13660046114b9565b6003602052600090815260409020805460019091015482565b60408051928352602083019190915201610171565b6101de6102dd3660046114b9565b6004602052600090815260409020546001600160a01b031681565b6101676103063660046113f9565b60076020526000908152604090205481565b61018d61032636600461141b565b610c3e565b610167610339366004611564565b600a60209081526000928352604080842090915290825290205481565b61016760015481565b61018d61036d36600461153a565b336000908152600a602090815260408083206001600160a01b039590951683529390529190912055565b61018d6103a536600461158e565b610d3d565b61018d6103b836600461141b565b610f58565b6101676103cb3660046113f9565b60066020526000908152604090205481565b61018d6103eb36600461148d565b61101e565b60008381526004602052604090205483906001600160a01b031633148061044b57506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b6104705760405162461bcd60e51b8152600401610467906115b0565b60405180910390fd5b506000838152600460209081526040808320546001600160a01b039081168452600983528184209684529582528083209490951682529290925291902055565b60008381526004602052604090205483906001600160a01b031633148061050b57506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b6105275760405162461bcd60e51b8152600401610467906115b0565b600080548582526002602052604091829020549151633088df1760e11b81526001600160a01b0391821692636111be2e9261056e928a9290911690889088906004016115d9565b600060405180830381600087803b15801561058857600080fd5b505af115801561059c573d6000803e3d6000fd5b505050505050505050565b60008281526004602052604090205482906001600160a01b031633148061060257506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b61061e5760405162461bcd60e51b8152600401610467906115b0565b81336001600160a01b038216148061065957506001600160a01b0381166000908152600a602090815260408083203384529091529020546001145b6106755760405162461bcd60e51b8152600401610467906115fe565b600080548582526005602090815260408084205460029092528084205490516309092f9760e21b815284936001600160a01b0390811693632424be5c936106c29391921690600401611627565b6040805180830381865afa1580156106de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610702919061163e565b60008054898252600560209081526040808420546002909252909220549395509193506001600160a01b039182169263870c616d9216886107428761138b565b61074b8761138b565b6040516001600160e01b031960e088901b16815260048101959095526001600160a01b0393841660248601529290911660448401526064830152608482015260a401600060405180830381600087803b1580156107a757600080fd5b505af11580156107bb573d6000803e3d6000fd5b50505050505050505050565b60008381526004602052604090205483906001600160a01b031633148061082257506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b61083e5760405162461bcd60e51b8152600401610467906115b0565b6000848152600260209081526040808320548354600590935292819020549051637608870360e01b815260048101919091526001600160a01b039283166024820181905260448201819052606482018190526084820187905260a48201869052929091169063760887039060c40161056e565b60006001600160a01b0382166108f95760405162461bcd60e51b815260206004820152600d60248201526c07573722d616464726573732d3609c1b6044820152606401610467565b610906600154600161139f565b6001556000546040516001600160a01b0390911690610924906113d5565b6001600160a01b039091168152602001604051809103906000f080158015610950573d6000803e3d6000fd5b5060018054600090815260026020908152604080832080546001600160a01b039687166001600160a01b0319918216179091558454845260048352818420805496891696909116861790559254825260058152828220879055928152600690925281205490036109d7576001546001600160a01b0383166000908152600660205260409020555b6001600160a01b03821660009081526007602052604090205415610a2c576001600160a01b03821660009081526007602090815260408083205460018054855260039093528184208190558254908452922001555b600180546001600160a01b038416600090815260076020908152604080832093909355600890522054610a5e9161139f565b6001600160a01b03831660008181526008602052604080822093909355600154925133917fd6be0bc178658a382ff4f91c8c68b542aa6b71685b8fe427966b87745c3ea7a291a4506001545b92915050565b81336001600160a01b0382161480610aeb57506001600160a01b0381166000908152600a602090815260408083203384529091529020546001145b610b075760405162461bcd60e51b8152600401610467906115fe565b60008281526004602052604090205482906001600160a01b0316331480610b6257506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b610b7e5760405162461bcd60e51b8152600401610467906115b0565b60008054848252600560205260408083205490516309092f9760e21b815283926001600160a01b031691632424be5c91610bbd91908a90600401611627565b6040805180830381865afa158015610bd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfd919061163e565b60008054888252600560209081526040808420546002909252909220549395509193506001600160a01b039182169263870c616d928a91166107428761138b565b60008381526004602052604090205483906001600160a01b0316331480610c9957506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b610cb55760405162461bcd60e51b8152600401610467906115b0565b6000805485825260056020908152604080842054600290925292839020549251633088df1760e11b81526001600160a01b0392831693636111be2e93610d059392911690889088906004016115d9565b600060405180830381600087803b158015610d1f57600080fd5b505af1158015610d33573d6000803e3d6000fd5b5050505050505050565b60008281526004602052604090205482906001600160a01b0316331480610d9857506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b610db45760405162461bcd60e51b8152600401610467906115b0565b60008281526004602052604090205482906001600160a01b0316331480610e0f57506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b610e2b5760405162461bcd60e51b8152600401610467906115b0565b6000838152600560205260408082205486835291205414610e825760405162461bcd60e51b81526020600482015260116024820152706e6f6e2d6d61746368696e672d6364707360781b6044820152606401610467565b600080548582526005602090815260408084205460029092528084205490516309092f9760e21b815284936001600160a01b0390811693632424be5c93610ecf9391921690600401611627565b6040805180830381865afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f919061163e565b60008054898252600560209081526040808420546002909252808420548b85529320549496509294506001600160a01b039081169363870c616d9392821691166107428761138b565b60008381526004602052604090205483906001600160a01b0316331480610fb357506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b610fcf5760405162461bcd60e51b8152600401610467906115b0565b60008054858252600260205260409182902054915163bb35783b60e01b81526001600160a01b03928316600482015285831660248201526044810185905291169063bb35783b90606401610d05565b60008281526004602052604090205482906001600160a01b031633148061107957506000818152600460209081526040808320546001600160a01b031683526009825280832084845282528083203384529091529020546001145b6110955760405162461bcd60e51b8152600401610467906115b0565b6001600160a01b0382166110db5760405162461bcd60e51b815260206004820152600d60248201526c06473742d616464726573732d3609c1b6044820152606401610467565b6000838152600460205260409020546001600160a01b03908116908316036111395760405162461bcd60e51b81526020600482015260116024820152703239ba16b0b63932b0b23c96b7bbb732b960791b6044820152606401610467565b6000838152600360205260409020541561116d57600083815260036020526040808220600180820154915484529190922001555b600083815260036020526040902060010154156111a557600083815260036020526040808220805460019091015483529120556111d4565b60008381526003602090815260408083205460048352818420546001600160a01b031684526007909252909120555b6000838152600460209081526040808320546001600160a01b0316835260069091529020548390036112325760008381526003602090815260408083206001015460048352818420546001600160a01b031684526006909252909120555b6000838152600460209081526040808320546001600160a01b0316835260089091529020546112629060016113ba565b600084815260046020908152604080832080546001600160a01b039081168552600884528285209590955580546001600160a01b03191694871694851790558383526007808352818420805489865260038552928520928355600192909201849055939092529190915254156112fe576001600160a01b0382166000908152600760209081526040808320548352600390915290206001018390555b6001600160a01b0382166000908152600660205260408120549003611339576001600160a01b03821660009081526006602052604090208390555b6001600160a01b0382166000908152600760209081526040808320869055600890915290205461136a90600161139f565b6001600160a01b039092166000908152600860205260409020919091555050565b80600081121561139a57600080fd5b919050565b6000826113ac8382611678565b9150811015610aaa57600080fd5b6000826113c78382611690565b9150811115610aaa57600080fd5b610103806116a883390190565b80356001600160a01b038116811461139a57600080fd5b60006020828403121561140b57600080fd5b611414826113e2565b9392505050565b60008060006060848603121561143057600080fd5b83359250611440602085016113e2565b9150604084013590509250925092565b6000806000806080858703121561146657600080fd5b843593506020850135925061147d604086016113e2565b9396929550929360600135925050565b600080604083850312156114a057600080fd5b823591506114b0602084016113e2565b90509250929050565b6000602082840312156114cb57600080fd5b5035919050565b6000806000606084860312156114e757600080fd5b505081359360208301359350604090920135919050565b60008060006060848603121561151357600080fd5b61151c846113e2565b925060208401359150611531604085016113e2565b90509250925092565b6000806040838503121561154d57600080fd5b611556836113e2565b946020939093013593505050565b6000806040838503121561157757600080fd5b611580836113e2565b91506114b0602084016113e2565b600080604083850312156115a157600080fd5b50508035926020909101359150565b6020808252600f908201526e18d91c0b5b9bdd0b585b1b1bddd959608a1b604082015260600190565b9384526001600160a01b03928316602085015291166040830152606082015260800190565b6020808252600f908201526e1d5c9b8b5b9bdd0b585b1b1bddd959608a1b604082015260600190565b9182526001600160a01b0316602082015260400190565b6000806040838503121561165157600080fd5b505080516020909101519092909150565b634e487b7160e01b600052601160045260246000fd5b6000821982111561168b5761168b611662565b500190565b6000828210156116a2576116a2611662565b50039056fe6080604052348015600f57600080fd5b50604051610103380380610103833981016040819052602c916088565b6040516328ec8bf160e21b81523360048201526001600160a01b0382169063a3b22fc490602401600060405180830381600087803b158015606c57600080fd5b505af1158015607f573d6000803e3d6000fd5b505050505060b6565b600060208284031215609957600080fd5b81516001600160a01b038116811460af57600080fd5b9392505050565b603f806100c46000396000f3fe6080604052600080fdfea2646970667358221220a8b22645a7460a23901c3debb7262a91da2298999f4a8086c8914014dc6a017664736f6c634300080d0033a26469706673582212209e7cc2f13d5f9db390e506c755dcf76fdd75f3f6e881868b3e51f90241dfde3764736f6c634300080d0033";

type DssCdpManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DssCdpManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DssCdpManager__factory extends ContractFactory {
  constructor(...args: DssCdpManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vat_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DssCdpManager> {
    return super.deploy(vat_, overrides || {}) as Promise<DssCdpManager>;
  }
  override getDeployTransaction(
    vat_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(vat_, overrides || {});
  }
  override attach(address: string): DssCdpManager {
    return super.attach(address) as DssCdpManager;
  }
  override connect(signer: Signer): DssCdpManager__factory {
    return super.connect(signer) as DssCdpManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DssCdpManagerInterface {
    return new utils.Interface(_abi) as DssCdpManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DssCdpManager {
    return new Contract(address, _abi, signerOrProvider) as DssCdpManager;
  }
}
