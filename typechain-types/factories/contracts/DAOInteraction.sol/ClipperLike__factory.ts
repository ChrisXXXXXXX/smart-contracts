/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ClipperLike,
  ClipperLikeInterface,
} from "../../../contracts/DAOInteraction.sol/ClipperLike";

const _abi = [
  {
    inputs: [],
    name: "count",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilk",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tab",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lot",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "usr",
        type: "address",
      },
      {
        internalType: "address",
        name: "kpr",
        type: "address",
      },
    ],
    name: "kick",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kicks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "list",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "sales",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pos",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tab",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lot",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "usr",
            type: "address",
          },
          {
            internalType: "uint96",
            name: "tic",
            type: "uint96",
          },
          {
            internalType: "uint256",
            name: "top",
            type: "uint256",
          },
        ],
        internalType: "struct Sale",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "take",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ClipperLike__factory {
  static readonly abi = _abi;
  static createInterface(): ClipperLikeInterface {
    return new utils.Interface(_abi) as ClipperLikeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ClipperLike {
    return new Contract(address, _abi, signerOrProvider) as ClipperLike;
  }
}
