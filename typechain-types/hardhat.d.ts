/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "AggregatorV3Interface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AggregatorV3Interface__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "PausableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PausableUpgradeable__factory>;
    getContractFactory(
      name: "ReentrancyGuardUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuardUpgradeable__factory>;
    getContractFactory(
      name: "ERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Upgradeable__factory>;
    getContractFactory(
      name: "IERC20MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ABNBc",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ABNBc__factory>;
    getContractFactory(
      name: "JarR",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JarR__factory>;
    getContractFactory(
      name: "CerosRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CerosRouter__factory>;
    getContractFactory(
      name: "CeToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CeToken__factory>;
    getContractFactory(
      name: "CeVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CeVault__factory>;
    getContractFactory(
      name: "HelioProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HelioProvider__factory>;
    getContractFactory(
      name: "IBinancePool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBinancePool__factory>;
    getContractFactory(
      name: "ICerosRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICerosRouter__factory>;
    getContractFactory(
      name: "ICertToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ICertToken__factory>;
    getContractFactory(
      name: "IDao",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDao__factory>;
    getContractFactory(
      name: "IDex",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDex__factory>;
    getContractFactory(
      name: "IHelioProvider",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHelioProvider__factory>;
    getContractFactory(
      name: "IVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVault__factory>;
    getContractFactory(
      name: "CeRouterLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.CeRouterLike__factory>;
    getContractFactory(
      name: "ClipperLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipperLike__factory>;
    getContractFactory(
      name: "DAOInteraction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DAOInteraction__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "GemJoinLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemJoinLike__factory>;
    getContractFactory(
      name: "HelioProviderLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HelioProviderLike__factory>;
    getContractFactory(
      name: "JugLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.JugLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "Rewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Rewards__factory>;
    getContractFactory(
      name: "SpotLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotLike__factory>;
    getContractFactory(
      name: "UsbGemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsbGemLike__factory>;
    getContractFactory(
      name: "UsbLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsbLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "DssCdpManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DssCdpManager__factory>;
    getContractFactory(
      name: "UrnHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UrnHandler__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "HelioRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HelioRewards__factory>;
    getContractFactory(
      name: "MCDOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MCDOracle__factory>;
    getContractFactory(
      name: "Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Mintable__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "HelioToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HelioToken__factory>;
    getContractFactory(
      name: "Jar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Jar__factory>;
    getContractFactory(
      name: "Abacus",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Abacus__factory>;
    getContractFactory(
      name: "ExponentialDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExponentialDecrease__factory>;
    getContractFactory(
      name: "LinearDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearDecrease__factory>;
    getContractFactory(
      name: "StairstepExponentialDecrease",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StairstepExponentialDecrease__factory>;
    getContractFactory(
      name: "AbacusLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AbacusLike__factory>;
    getContractFactory(
      name: "Clipper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Clipper__factory>;
    getContractFactory(
      name: "ClipperCallee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipperCallee__factory>;
    getContractFactory(
      name: "DogLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DogLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "SpotterLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SpotterLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "ClipperLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClipperLike__factory>;
    getContractFactory(
      name: "Dog",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Dog__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "Flapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flapper__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Flopper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Flopper__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "VowLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VowLike__factory>;
    getContractFactory(
      name: "DSTokenLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DSTokenLike__factory>;
    getContractFactory(
      name: "GemJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemJoin__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "UsbJoin",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UsbJoin__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Jug",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Jug__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Pot",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pot__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "PipLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PipLike__factory>;
    getContractFactory(
      name: "Spotter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Spotter__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Usb",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Usb__factory>;
    getContractFactory(
      name: "Vat",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vat__factory>;
    getContractFactory(
      name: "FlapLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlapLike__factory>;
    getContractFactory(
      name: "FlopLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FlopLike__factory>;
    getContractFactory(
      name: "VatLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VatLike__factory>;
    getContractFactory(
      name: "Vow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Vow__factory>;
    getContractFactory(
      name: "MBNB",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MBNB__factory>;
    getContractFactory(
      name: "Oracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Oracle__factory>;
    getContractFactory(
      name: "DaiJoinLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DaiJoinLike__factory>;
    getContractFactory(
      name: "GemLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GemLike__factory>;
    getContractFactory(
      name: "ProxyLike",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ProxyLike__factory>;
    getContractFactory(
      name: "BnbOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BnbOracle__factory>;
    getContractFactory(
      name: "RenounceableQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenounceableQueue__factory>;

    getContractAt(
      name: "AggregatorV3Interface",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AggregatorV3Interface>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "PausableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PausableUpgradeable>;
    getContractAt(
      name: "ReentrancyGuardUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuardUpgradeable>;
    getContractAt(
      name: "ERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Upgradeable>;
    getContractAt(
      name: "IERC20MetadataUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MetadataUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ABNBc",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ABNBc>;
    getContractAt(
      name: "JarR",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JarR>;
    getContractAt(
      name: "CerosRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CerosRouter>;
    getContractAt(
      name: "CeToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CeToken>;
    getContractAt(
      name: "CeVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CeVault>;
    getContractAt(
      name: "HelioProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HelioProvider>;
    getContractAt(
      name: "IBinancePool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBinancePool>;
    getContractAt(
      name: "ICerosRouter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICerosRouter>;
    getContractAt(
      name: "ICertToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ICertToken>;
    getContractAt(
      name: "IDao",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDao>;
    getContractAt(
      name: "IDex",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDex>;
    getContractAt(
      name: "IHelioProvider",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IHelioProvider>;
    getContractAt(
      name: "IVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVault>;
    getContractAt(
      name: "CeRouterLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.CeRouterLike>;
    getContractAt(
      name: "ClipperLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipperLike>;
    getContractAt(
      name: "DAOInteraction",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DAOInteraction>;
    getContractAt(
      name: "DogLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "GemJoinLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemJoinLike>;
    getContractAt(
      name: "HelioProviderLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HelioProviderLike>;
    getContractAt(
      name: "JugLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.JugLike>;
    getContractAt(
      name: "PipLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "Rewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Rewards>;
    getContractAt(
      name: "SpotLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotLike>;
    getContractAt(
      name: "UsbGemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsbGemLike>;
    getContractAt(
      name: "UsbLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsbLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "DssCdpManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DssCdpManager>;
    getContractAt(
      name: "UrnHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UrnHandler>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "HelioRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HelioRewards>;
    getContractAt(
      name: "MCDOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MCDOracle>;
    getContractAt(
      name: "Mintable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Mintable>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "HelioToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.HelioToken>;
    getContractAt(
      name: "Jar",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Jar>;
    getContractAt(
      name: "Abacus",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Abacus>;
    getContractAt(
      name: "ExponentialDecrease",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExponentialDecrease>;
    getContractAt(
      name: "LinearDecrease",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.LinearDecrease>;
    getContractAt(
      name: "StairstepExponentialDecrease",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StairstepExponentialDecrease>;
    getContractAt(
      name: "AbacusLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AbacusLike>;
    getContractAt(
      name: "Clipper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Clipper>;
    getContractAt(
      name: "ClipperCallee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipperCallee>;
    getContractAt(
      name: "DogLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DogLike>;
    getContractAt(
      name: "PipLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "SpotterLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SpotterLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "ClipperLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClipperLike>;
    getContractAt(
      name: "Dog",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Dog>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "Flapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Flapper>;
    getContractAt(
      name: "GemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Flopper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Flopper>;
    getContractAt(
      name: "GemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "VowLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VowLike>;
    getContractAt(
      name: "DSTokenLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DSTokenLike>;
    getContractAt(
      name: "GemJoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemJoin>;
    getContractAt(
      name: "GemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "UsbJoin",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UsbJoin>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Jug",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Jug>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Pot",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pot>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "PipLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.PipLike>;
    getContractAt(
      name: "Spotter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Spotter>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Usb",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Usb>;
    getContractAt(
      name: "Vat",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vat>;
    getContractAt(
      name: "FlapLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlapLike>;
    getContractAt(
      name: "FlopLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FlopLike>;
    getContractAt(
      name: "VatLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VatLike>;
    getContractAt(
      name: "Vow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Vow>;
    getContractAt(
      name: "MBNB",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MBNB>;
    getContractAt(
      name: "Oracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Oracle>;
    getContractAt(
      name: "DaiJoinLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DaiJoinLike>;
    getContractAt(
      name: "GemLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.GemLike>;
    getContractAt(
      name: "ProxyLike",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ProxyLike>;
    getContractAt(
      name: "BnbOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BnbOracle>;
    getContractAt(
      name: "RenounceableQueue",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RenounceableQueue>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
